"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Ticker", {
  enumerable: true,
  get: function get() {
    return _ticker.default;
  }
});
exports.globalTimeline = exports.default = exports.Tween = void 0;

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _plugins = _interopRequireDefault(require("./plugins"));

var _StylePlugin = _interopRequireDefault(require("./plugins/StylePlugin"));

var _ArrayPlugin = _interopRequireDefault(require("./plugins/ArrayPlugin"));

var _GradientsPlugin = _interopRequireDefault(require("./plugins/GradientsPlugin"));

var _ticker = _interopRequireDefault(require("./animate/ticker"));

var _timeline = _interopRequireDefault(require("./animate/timeline"));

var _animate = _interopRequireDefault(require("./animate/animate"));

var _utils = require("./utils");

_plugins.default.push(_ArrayPlugin.default);

_plugins.default.push(_GradientsPlugin.default);

_plugins.default.push(_StylePlugin.default);

var tweenId = 0;
var globalTimeline = new _timeline.default();
exports.globalTimeline = globalTimeline;

var Tween = /*#__PURE__*/function () {
  function Tween(targets, _props) {
    var _this = this;

    (0, _classCallCheck2.default)(this, Tween);
    this.targets = void 0;
    this.props = void 0;
    this.timeline = void 0;
    this.animate = void 0;
    this.$reverse = false;
    this.vars = [];
    this.initTime = void 0;
    this.attr = void 0;

    this.init = /*#__PURE__*/function () {
      var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(vars) {
        var props;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                props = (0, _utils.getInitProps)(vars);

                if (_this.targets[0].tagName && !_this.attr) {
                  props.animation = (0, _utils.dataToArray)(props.animation).map(function (item) {
                    var c = {
                      style: {}
                    };

                    for (var k in item) {
                      //Object.keys(item).forEach(k => {
                      if (k in _plugins.default || k in _utils.initAnimProps) {
                        c[k] = item[k];
                      } else {
                        c.style[k] = item[k];
                      } //});

                    }

                    if (!Object.keys(c.style).length) {
                      delete c.style;
                    } // 时间去掉小数点;


                    if (item.duration) {
                      item.duration = Math.round(item.duration);
                    }

                    if (item.delay) {
                      item.delay = Math.round(item.delay);
                    }

                    if (item.appearTo) {
                      item.appearTo = Math.round(item.appearTo);
                    }

                    if (item.repeatDelay) {
                      item.repeatDelay = Math.round(item.repeatDelay);
                    }

                    return c;
                  });
                }

                _this.animate = new _animate.default(props);
                _this.animate.id = "TweenOne_".concat(tweenId);
                tweenId++;
                _this.animate.startTime = _this.initTime;
                _this.animate.onChangeChild = _this.onChange;
                _this.animate.onChangeTimeline = _this.onChangeTimeline;
                _this.animate.root = _this;
                _this.animate.parent = _this.timeline;

                _this.animate.init();

              case 11:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();

    this.renderToDom = function () {
      // vars.forEach((item, i) => {
      for (var i = 0; i < _this.vars.length; i++) {
        var item = _this.vars[i]; // Object.keys(item).forEach((key: string) => {

        for (var key in item) {
          var value = item[key];
          var target = _this.targets[i];

          if (!target) {
            continue;
          }

          if (_this.props.attr && target.tagName && target.setAttribute) {
            if (key === 'style') {
              // Object.keys(value).forEach(key => {
              for (var ck in value) {
                target.style[ck] = value[key];
              } // });

            }

            target.setAttribute(key, value);
          } else if (key in _plugins.default) {
            var $key = _plugins.default[key].key;

            if (typeof target[$key] === 'function') {
              target[$key](value.attr, value.path);
            } else if ((0, _typeof2.default)(value) === 'object' && (0, _typeof2.default)(target[$key]) === 'object' && $key) {
              //Object.keys(value).forEach(ck => {
              for (var _ck in value) {
                var va = value[_ck];

                if ($key === '__self') {
                  target[_ck] = va;
                } else {
                  target[$key][_ck] = (0, _typeof2.default)(va) === 'object' && va.text || va;
                }
              } //});

            } else {
              target[$key || key] = value;
            }
          } else {
            target[key] = value;
          } // });

        }
      } //});

    };

    this.onChange = function (e) {
      if (e.mode === 'onComplete' && e.render) {
        _this.renderToDom();
      }

      if (e.mode && _this.props.onChange && !e.silence) {
        e.targets = (0, _utils.flatArray)(e.targets);
        e.vars = (0, _utils.flatArray)(e.vars);

        _this.props.onChange(e);
      }
    };

    this.onChangeTimeline = function (e) {
      _this.renderToDom(); // 时间轴结束后清除元素上的缓存


      if (e.mode === 'onTimelineComplete') {
        var _e$targets;

        (_e$targets = e.targets) === null || _e$targets === void 0 ? void 0 : _e$targets.forEach(function (item) {
          delete item._tweenOneVars;
        });
      }

      if (e.mode && _this.props.onChangeTimeline) {
        e.targets = (0, _utils.flatArray)(e.targets);
        e.vars = (0, _utils.flatArray)(_this.vars);

        _this.props.onChangeTimeline(e);
      }
    };

    this.goto = function (moment, paused) {
      _this.targets.forEach(function (item) {
        if (!item) {
          return;
        } // item._tweenOneVars = {};


        Object.keys(item._tweenOneVars || {}).forEach(function (key) {
          delete item._tweenOneVars[key];
        });
      });

      _this.animate.goto(moment, paused);
    };

    this.kill = function (index) {
      _this.animate.kill(index);
    };

    this.targets = targets;
    this.props = _props;
    this.timeline = globalTimeline;
    this.initTime = _ticker.default.time;
    this.attr = _props.attr;
    targets.forEach(function (item) {
      _this.vars.push(item._tweenOneVars);
    });
    this.init(_props);
  }

  (0, _createClass2.default)(Tween, [{
    key: "paused",
    get: function get() {
      return this.animate.pausedState;
    },
    set: function set(v) {
      this.animate.paused(v);
    }
  }, {
    key: "reverse",
    get: function get() {
      return this.$reverse;
    },
    set: function set(v) {
      this.$reverse = v;
      this.animate.reverse(v);
    }
  }, {
    key: "regionStartTime",
    get: function get() {
      return this.animate.regionStartTime;
    },
    set: function set(v) {
      this.animate.regionStartTime = v;
      this.animate.setTotalTime();
    }
  }, {
    key: "regionEndTime",
    get: function get() {
      return this.animate.regionEndTime || this.animate.totalTime;
    },
    set: function set(v) {
      this.animate.regionEndTime = v;
      this.animate.setTotalTime();
    }
  }]);
  return Tween;
}();

exports.Tween = Tween;

var TweenOne = function TweenOne(targets, vars) {
  if (!targets) {
    console.error("Error: targets is undefined.");
    return undefined;
  }

  if (_ticker.default.state !== 'wake') {
    // 先将 ticker 唤醒，避免同时添加时 initTime 出错；
    _ticker.default.wake();
  }

  var t = (0, _utils.dataToArray)(targets).map(function (item) {
    item._tweenOneVars = item._tweenOneVars || {};
    return item;
  }); // 分解 targets 里的元素类型

  var doms = t.filter(function (c) {
    return c.tagName;
  });
  var objs = t.filter(function (c) {
    return !c.tagName;
  });
  var tween = [];

  if (doms.length) {
    tween.push(new Tween(doms, vars));
  }

  if (objs.length) {
    tween.push(new Tween(objs, vars));
  }

  return (0, _utils.flatArray)(tween);
};

TweenOne.kill = function (targets) {
  if (typeof targets === 'undefined') {
    globalTimeline.killAll(true);
  } else {
    globalTimeline.kill((0, _utils.dataToArray)(targets));
  }
};

TweenOne.plugins = _plugins.default;
var _default = TweenOne;
exports.default = _default;